{"version":3,"sources":["Context.js","components/Header.js","Hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","pages/Photos.js","utils/index.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","allPhotos","setAllPhotos","cartItems","setCartitems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","newAllPhotos","map","photo","isFavorite","addToCart","newImg","some","item","prevElements","filter","children","Header","useContext","to","className","length","useHover","hovered","setHovered","ref","useRef","enter","leave","node","current","addEventListener","removeEventListener","CartItem","icon","onClick","src","url","width","alt","Cart","orderStatus","setOrderStatus","cartItemElements","inx","totalCost","toLocaleString","style","currency","setTimeout","Image","img","heartIcon","cartIcon","onMouseEnter","onMouseLeave","Photos","image","i","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d12e5fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst Context = React.createContext(\"\");\n\nfunction ContextProvider(props) {\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [cartItems, setCartitems] = useState([]);\n  const URL =\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n  useEffect(() => {\n    fetch(URL)\n      .then((res) => res.json())\n      .then((data) => {\n        setAllPhotos(data);\n      });\n  }, []);\n\n  function toggleFavorite(id) {\n    const newAllPhotos = allPhotos.map((photo) => {\n      if (photo.id === id) {\n        return { ...photo, isFavorite: !photo.isFavorite };\n      } else return photo;\n    });\n    setAllPhotos(newAllPhotos);\n  }\n\n  function addToCart(newImg) {\n    if (cartItems.some((item) => item.id === newImg.id)) {\n      setCartitems((prevElements) =>\n        prevElements.filter((item) => item.id !== newImg.id)\n      );\n    } else {\n      setCartitems((prevElements) => [...prevElements, newImg]);\n    }\n  }\n\n  // console.log(cartItems);\n\n  return (\n    <Context.Provider\n      value={{\n        allPhotos,\n        toggleFavorite,\n        addToCart,\n        cartItems,\n        setCartitems,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../Context\";\n\nfunction Header() {\n  const { cartItems } = useContext(Context);\n  return (\n    <header>\n      <Link to=\"/\">\n        <h2>Pic Some</h2>\n      </Link>\n      <Link to=\"/cart\">\n        <i\n          className={`${\n            cartItems.length > 0\n              ? \"ri-shopping-cart-fill\"\n              : \"ri-shopping-cart-line\"\n          } ri-fw ri-2x`}\n        ></i>\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useState, useEffect, useRef } from \"react\";\n\nfunction useHover() {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef(null);\n\n  function enter() {\n    setHovered(true);\n  }\n  function leave() {\n    setHovered(false);\n  }\n\n  useEffect(() => {\n    const node = ref.current;\n    node.addEventListener(\"mouseenter\", enter);\n    node.addEventListener(\"mouseleave\", leave);\n\n    return () => {\n      node.removeEventListener(\"mouseenter\", enter);\n      node.removeEventListener(\"mouseleave\", leave);\n    };\n  }, []);\n\n  return [hovered, ref];\n}\n\nexport default useHover;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Context } from \"../Context\";\nimport useHover from \"../Hooks/useHover\";\n\nfunction CartItem({ item }) {\n  //   const [hovered, setHovered] = useState(false);\n  const [hovered, ref] = useHover();\n  const { addToCart } = useContext(Context);\n  const icon = (\n    <i\n      ref={ref}\n      onClick={() => addToCart(item)}\n      className={hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"}\n    ></i>\n  );\n  return (\n    <main className=\"cart-item\">\n      {icon}\n      <img src={item.url} width=\"130px\" alt=\"article\" />\n      <p>$4.99</p>\n    </main>\n  );\n}\n\nCartItem.propTypes = {\n  item: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CartItem;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport CartItem from \"../components/CartItem\";\n\nfunction Cart() {\n  const [orderStatus, setOrderStatus] = useState(\"Place Order\");\n  const { cartItems, setCartitems } = useContext(Context);\n  const cartItemElements = cartItems.map((item, inx) => (\n    <CartItem key={item.id} item={item} />\n  ));\n  const totalCost = 4.99 * cartItems.length;\n  function orderDisplay() {\n    setOrderStatus(\"Loading...\");\n    setTimeout(() => {\n      setOrderStatus(\"Order Placed!\");\n      setCartitems([]);\n    }, 3000);\n  }\n\n  return (\n    <main className=\"cart-page\">\n      <h1>Check out</h1>\n      {cartItemElements}\n      <p className=\"total-cost\">\n        Total:{\" \"}\n        {totalCost.toLocaleString(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        })}\n      </p>\n      <div className=\"order-button\">\n        {cartItems.length > 0 ? (\n          <button onClick={() => orderDisplay()}>{orderStatus}</button>\n        ) : (\n          <p>\"You have no items in your cart.\"</p>\n        )}\n      </div>\n    </main>\n  );\n}\n\nexport default Cart;\n","import React, { useState, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport PropTypes from \"prop-types\";\n\nfunction Image({ className, img }) {\n  const [hovered, setHovered] = useState(false);\n  const { toggleFavorite } = useContext(Context);\n  const { addToCart, cartItems } = useContext(Context);\n  const heartIcon = hovered && (\n    <i\n      onClick={() => toggleFavorite(img.id)}\n      className={`${\n        img.isFavorite ? \"ri-heart-fill\" : \"ri-heart-line\"\n      } favorite`}\n    ></i>\n  );\n  const cartIcon = hovered && (\n    <i\n      onClick={() => addToCart(img)}\n      className={`${\n        cartItems.some((item) => item.id === img.id)\n          ? \"ri-shopping-cart-fill\"\n          : \"ri-add-circle-line\"\n      } cart`}\n    ></i>\n  );\n\n  return (\n    <div\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className={`${className} image-container`}\n    >\n      <img src={img.url} className=\"image-grid\" alt=\"main-page-element\" />\n      {heartIcon}\n      {cartIcon}\n    </div>\n  );\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool,\n  }),\n};\n\nexport default Image;\n","import React, { useContext } from \"react\";\nimport { getClass } from \"../utils/index\";\nimport Image from \"../components/Image\";\nimport { Context } from \"../Context\";\n\nfunction Photos() {\n  const { allPhotos } = useContext(Context);\n  return (\n    <main className=\"photos\">\n      {allPhotos.map((image, inx) => (\n        <Image key={image.id} img={image} className={getClass(inx)} />\n      ))}\n    </main>\n  );\n}\n\nexport default Photos;\n","export function getClass(i) {\n  if (i % 5 === 0) {\n    return \"big\";\n  } else if (i % 6 === 0) {\n    return \"wide\";\n  }\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Cart from \"./pages/Cart\";\nimport Photos from \"./pages/Photos\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Photos />\n        </Route>\n        <Route exact path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\nimport { ContextProvider } from \"./Context\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Route>\n      <App />\n    </Route>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}